import aiogram
import psycopg2
from aiogram.contrib.fsm_storage.memory import MemoryStorage
import logging

cfg = {
    'token': '6075826339:AAF-yGH627OMzQcZAQuQes0PC3K3dB3PUd4',
    'teh_chat_id': -842742159,
    'db_name': 'Infotron_bd',  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —ñ–º'—è –≤–∞—à–æ—ó PostgreSQL –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    'db_user': 'vitmur',  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ PostgreSQL –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    'db_password': 'uaknutd',  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ –ø–∞—Ä–æ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ PostgreSQL –±–∞–∑–∏ –¥–∞–Ω–∏—Ö

    'button_new_question': '‚úâ –ü–æ—Å—Ç–∞–≤–∏—Ç–∏ –ø–∏—Ç–∞–Ω–Ω—è',
    'welcome_message': "–í—ñ—Ç–∞—é, –º–∞–π–±—É—Ç–Ω—ñ–π –≤—Å—Ç—É–ø–Ω–∏–∫—É –ö–ù–£–¢–î‚ùóÔ∏èüßë‚Äçüéì\n"
                       "–í—Å—Ç—É–ø –Ω–∞ 1 –∫—É—Ä—Å –∑–∞–≤–∂–¥–∏ —Ç—Ä–∏–≤–æ–∂–Ω–∏–πüìö\n"
                       "–Ü —â–æ–± –±—É—Ç–∏ –≤–ø–µ–≤–Ω–µ–Ω–∏–º –≤ –æ–±—Ä–∞–Ω–æ–º—É —à–ª—è—Ö—É, –∑–∞–≤–∂–¥–∏ –≤–∏–Ω–∏–∫–∞—î –±–µ–∑–ª—ñ—á –∑–∞–ø–∏—Ç–∞–Ω—åüí≠\n"
                       "–¢—É—Ç —Ç–∏ –∑–Ω–∞–π–¥–µ—à –Ω–µ–æ–±—Ö—ñ–¥–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é, —è–∫–∞ –¥–æ–ø–æ–º–æ–∂–µ —Ç–æ–±—ñ –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –Ω–∞–π–ø–æ—à–∏—Ä–µ–Ω—ñ—à—ñ "
                       "–∑–∞–ø–∏—Ç–∞–Ω–Ω—èüîç\n "
                       "\n"
                       "P.S. –Ø–∫—â–æ –≤–∏–Ω–∏–∫–Ω—É—Ç—å –ø–∏—Ç–∞–Ω–Ω—è, –Ω–∞ —è–∫—ñ –Ω–µ –∑–Ω–∞–π–¥–µ—à –≤—ñ–¥–ø–æ–≤—ñ–¥—å, –Ω–∞–ø–∏—à–∏ –π–æ–≥–æ —Å—é–¥–∏üëáüèª",
    'error_message': '–£–ø—Å! –ü–æ–º–∏–ª–∫–∞! –ù–µ —Ö–≤–∏–ª—é–π—Ç–µ—Å—è, –ø–æ–º–∏–ª–∫—É –≤–∂–µ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞–º.',
    'ban_message': '‚ö† –í–∏ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω—ñ –≤ –±–æ—Ç—ñ!',
    'question_type_ur_question_message': 'üìù –í–≤–µ–¥—ñ—Ç—å —Å–≤–æ—î –∑–∞–ø–∏—Ç–∞–Ω–Ω—è (–º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ —Ñ–æ—Ç–æ):',
    'question_ur_question_sended_message': '‚úâ –í–∞—à –∑–∞–ø–∏—Ç –±—É–≤ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∏–π! –û—á—ñ–∫—É–π—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ —Å–ª—É–∂–±–∏ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏.',
}

bot = aiogram.Bot(token=cfg['token'])

# –ó–º—ñ–Ω–µ–Ω–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ PostgreSQL
con = psycopg2.connect(
    dbname=cfg['db_name'],
    user=cfg['db_user'],
    password=cfg['db_password'],
    host='infotron_postgres',  # –ó–∞–ª–∏—à—Ç–µ —è–∫ —î, –æ—Å–∫—ñ–ª—å–∫–∏ —Ü–µ —ñ–º'—è —Å–µ—Ä–≤—ñ—Å—É –∑ Docker Compose
    port='5432'  # –ó–∞–ª–∏—à—Ç–µ —è–∫ —î, –ø–æ—Ä—Ç –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –¥–ª—è PostgreSQL
)
cur = con.cursor()
order = {}
logging.basicConfig(level=logging.INFO)
storage = MemoryStorage()
dp = aiogram.Dispatcher(bot, storage=storage)

q = '*' * 30
cur.execute("SELECT id FROM cafe_order")
try:
    max_id = cur.fetchone()[0]  # –û—Ç—Ä–∏–º–∞—Ç–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è id
except TypeError:
    max_id = 0
dict_order = {'my_basket': f"–û—Å—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤ —É –≤–∞—à–æ–º—É –∫–æ—à–∏–∫—É:\n{', '.join([f'{key} - {cost}' for key, cost in order.items()])}",
              'confirm_order': f"""–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è {max_id + 1} –∑–∞–±–µ—Ä—ñ—Ç—å —ñ –æ–ø–ª–∞—Ç—ñ—Ç—å –π–æ–≥–æ —É –∫–∞—Ñ–µ""" if len(
                  order) > 0 else f"–í–∏–±–µ—Ä—ñ—Ç—å –ø—Ä–æ–¥—É–∫—Ç–∏",
              }

dict_answer = {'–ù–∞–π—á–∞—Å—Ç—ñ—à—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è': '–û—Å—å –ø–µ—Ä–µ–ª—ñ–∫ –Ω–∞–π—á–∞—Å—Ç—ñ—à–∏—Ö –∑–∞–ø–∏—Ç–∞–Ω—å...',
               '–§—ñ–Ω–∞–Ω—Å–∏': '–û—Å—å –ø–µ—Ä–µ–ª—ñ–∫ –ø–∏—Ç–∞–Ω—å —è–∫—ñ —Å—Ç–æ—Å—É—é—Ç—å—Å—è —Ñ—ñ–Ω–∞–Ω—Å—ñ–≤...',
               '–ü–∏—Ç–∞–Ω–Ω—è —â–æ–¥–æ –Ω–∞–≤—á–∞–Ω–Ω—è': '–û—Å—å –ø–µ—Ä–µ–ª—ñ–∫ –ø–∏—Ç–∞–Ω—å —è–∫—ñ —Å—Ç–æ—Å—É—é—Ç—å—Å—è –Ω–∞–≤—á–∞–Ω–Ω—è...',
               '–ü–∏—Ç–∞–Ω–Ω—è —â–æ–¥–æ –≤—Å—Ç—É–ø—É': '–û—Å—å –ø–µ—Ä–µ–ª—ñ–∫ –ø–∏—Ç–∞–Ω—å —è–∫—ñ —Å—Ç–æ—Å—É—é—Ç—å—Å—è –≤—Å—Ç—É–ø—É...'}
